클래스 구성
	클래스는 calss 키워드와 클래스 이름으로 선언하고 중괄호{} 안에 클래스의 필드와 메소드를 모두 작성하여야 한다.
	클래스 외부에 필드나 메소드를 결코 둘 수 없다.
	
	클래스의 멤버는 필드와 메소드.
	필드 = 객체의 상태 값을 저장 할 멤버 변수
	메소드 = 실행 가능한 함수이고 객체의 행위를 구현한다.
	
생성자
	어떠한 메소드보다 빨리 실행된다	= 	바로 변수를 
	생성자는 여러개를 만들 수 있다
	객체의 특성에 따라 어떤 생성자를 사용하여 만들 것인지 선택할 수 있다 
	생성자는 객체가 필요한 초기 작업을 위함이다.  
	생성자가 하나라도 생성이 되어 있는 경우는 컴파일러가 기본 생성자를 임의로 삽입 해 주지 않는다.
	
this
	반드시 같은 클래스의 다른 생성자를 호출 할 때 사용한다.
	생성자의 첫 번째 문장으로 사용 되어야 한다.
	메서드의 인수나 변수에 필드와 같은 이름을 붙여도 구분하여 사용가능.
	주로 생성자와 메소드의 매개변수 이름이 필드와 동일한 경우, 
	인스턴스 멤버인 필드임을 명시하고자 할때 사용.
	
this()
	생성자에서만 사용된다
	생성자가 다른 생성자를 호출 할 때 사용한다.
	같은 클래스의 다른 생성자를 호출할때 사용된다
	생성자의 첫번째 문장으로 사용 되어야 한다,
	
파라미터
	메소드의 입력값을 저장하는 변수
	위치
		type	name	()	{...}		=	 (파라메터)
	단일 파라미터 메소드 형식
	
p 158 인자전달
	기본타입의 값 전달
		n의 값을 복사하고 복사 한 값을 전달하여 그 수를 증가시키기 때문에 변수n의 값은 변함이 없다
	객체를 전달
		pizza안의 변수의 값을 복사 후 전달, 복사받은 변수의 값도 pizza를 가르키기 때문에 값은 변한다.
	배열을 전달
		객체 전달과 같다.
	
p 161 오버로딩 or 중복
	메소드 이름이 동일하여야 한다
	메소드 매개 변수의 개수나 타입이 서로 달라야한다.
	리턴타입, 접근 지정자는 오버로딩과 관계 없다.
	
	
	